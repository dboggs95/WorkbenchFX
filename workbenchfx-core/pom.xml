<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.dlsc.workbenchfx</groupId>
		<artifactId>workbenchfx-parent</artifactId>
		<version>2022.0</version>
	</parent>
	<artifactId>workbenchfx-core</artifactId>
	<version>${parent.version}-${java.version}</version>
	<packaging>jar</packaging>
	<name>WorkbenchFX Core</name>
	<url>https://github.com/dboggs95/WorkbenchFX</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/dboggs95/WorkbenchFX</url>
	</scm>

	<developers>
		<developer>
			<name>Francois Martin</name>
		</developer>
		<developer>
			<name>Marco Sanfratello</name>
		</developer>
		<developer>
			<name>Dirk Lemmermann</name>
			<url>http://www.dlsc.com</url>
			<organization>DLSC Software &amp; Consulting</organization>
		</developer>
	</developers>

	<build>
		<plugins>
			<!-- Packaging -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<failOnError>false</failOnError>
					<force>true</force>
					<windowtitle>WorkbenchFX API</windowtitle>
					<additionalJOptions>
						<additionalJOption>-J-Djavafx.javadoc=true</additionalJOption>
						<additionalJOption>-html5</additionalJOption>
					</additionalJOptions>
					<docfilessubdirs>true</docfilessubdirs>
					<tags>
						<tag>
							<name>defaultValue</name>
							<placement>a</placement>
							<head>Default Value:</head>
						</tag>
						<tag>
							<name>apiNote</name>
							<placement>a</placement>
							<head>API Note:</head>
						</tag>
						<tag>
							<name>implSpec</name>
							<placement>a</placement>
							<head>Implementation Requirements:</head>
						</tag>
						<tag>
							<name>implNote</name>
							<placement>a</placement>
							<head>Implementation Note:</head>
						</tag>
					</tags>
					<sourceFileExcludes>
						<sourceFileExclude>**\/\module-info.java</sourceFileExclude>
					</sourceFileExcludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>8.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>make-docs

                        </id> <!-- this is used for inheritance merges -->
						<phase>package
                        </phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>aggregate</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generates CodeCoverage Report -->
			<!--plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin-->

			<!-- Execute Tests (JUnit / Spock) -->
			<!--plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<excludedGroups>slow</excludedGroups>
					<includes>
						<include>**/*Spec.java</include>
						<include>**/*Test.java</include>
					</includes>
					<forkCount>0</forkCount>
				</configuration>
			</plugin-->

			<!-- Groovy Compiler for Spock Tests -->
			<!-- For Eclipse, install this: https://dist.springsource.org/release/GRECLIPSE/4.4.0/e4.22-->
			<!-- Commenting out. Could not resolve java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7 on Java 17. -->
			<!--plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.13.1</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
			</plugin-->

			<!-- Add Groovy tests folder as test source -->
			<!-- Commenting out. Could not resolve java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7 on Java 17. -->
			<!--plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/groovy</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin-->

			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin-->

		</plugins>
	</build>

	<dependencies>
		<!-- *** Compile *** -->
		<!-- Libraries -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.0.1-jre</version>
		</dependency>

		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-commons</artifactId>
			<version>2022.0-${java.version}</version>
		</dependency>

		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-fontawesome</artifactId>
			<version>4.7.0-${java.version}</version>
		</dependency>

		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-materialdesignfont</artifactId>
			<version>1.7.22-${java.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.32</version>
		</dependency>

		<!-- *** Test *** -->
		<!-- JUnit 5 Testing Framework -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JUnit 4 Engine for JUnit 5, is needed for Spock to work -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.vintage.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spock Testing Framework -->
		<!-- Commenting out. Could not resolve java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7 on Java 17. -->
		<!--dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>1.3-groovy-2.5</version>
			<scope>test</scope>
		</dependency-->

		<dependency>
			<!-- enables mocking of classes (in addition to interfaces) -->
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>1.10.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- enables mocking of classes without default constructor (together with CGLIB) -->
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>

		<!-- TestFX for JavaFX Testing -->
		<!--dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>4.0.16-alpha</version>
			<scope>compile</scope>
		</dependency-->
		<!--dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>4.0.16-alpha</version>
			<scope>compile</scope>
		</dependency-->

		<!-- Commenting out. Could not resolve java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7 on Java 17. -->
		<!--dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-spock</artifactId>
			<version>4.0.16-alpha</version>
			<scope>test</scope>
		</dependency-->

		<!-- Testing Utilities -->
		<!--dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.21.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.17.0</version>
			<scope>test</scope>
		</dependency-->
	</dependencies>
</project>